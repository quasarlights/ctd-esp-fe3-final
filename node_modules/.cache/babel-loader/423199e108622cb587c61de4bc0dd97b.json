{"ast":null,"code":"var _jsxFileName = \"/home/dit/Desktop/f3-final/ctd-esp-fe3-final/src/Routes/Favs.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from \"../Components/Card\";\nimport { useDentistStates } from \"../Context\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\"; //Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Favs = () => {\n  _s();\n\n  const {\n    dentistState,\n    dentistDispatch\n  } = useDentistStates();\n  const doctorImg = \"../images/doctor.jpg\";\n  const [objetos, setObjetos] = useState([]);\n  const [favsAdded, setFavsAdded] = useState([]); // Nuevo estado para mantener los IDs de favoritos\n\n  const theme = dentistState.theme === \"dark\" ? \"dark\" : \"light\";\n  useEffect(() => {\n    const misObjetos = localStorage.getItem('favs');\n\n    if (misObjetos) {\n      const parsedObjetos = JSON.parse(misObjetos);\n      const uniqueObjetos = removeDuplicates(parsedObjetos, 'id');\n      setObjetos(uniqueObjetos);\n    }\n  }, []); // Función para eliminar objetos duplicados basados en una propiedad\n\n  const removeDuplicates = (arr, prop) => {\n    const uniqueValues = [];\n    const lookup = {};\n\n    for (let i = 0; i < arr.length; i++) {\n      const obj = arr[i];\n\n      if (!lookup[obj[prop]]) {\n        lookup[obj[prop]] = true;\n        uniqueValues.push(obj);\n      }\n    }\n\n    return uniqueValues;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: theme,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dentists Favs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-grid\",\n        children: objetos && objetos.map(fav => /*#__PURE__*/_jsxDEV(Card, {\n          imgSrc: doctorImg,\n          name: fav.name,\n          username: fav.username,\n          id: fav.id,\n          hideDelete: false,\n          isDisabled: true\n        }, fav.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Favs, \"1oLznlKZKX624i/M/dAzZh41Zq8=\", false, function () {\n  return [useDentistStates];\n});\n\n_c = Favs;\nexport default Favs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favs\");","map":{"version":3,"names":["React","Card","useDentistStates","useEffect","useState","Favs","dentistState","dentistDispatch","doctorImg","objetos","setObjetos","favsAdded","setFavsAdded","theme","misObjetos","localStorage","getItem","parsedObjetos","JSON","parse","uniqueObjetos","removeDuplicates","arr","prop","uniqueValues","lookup","i","length","obj","push","map","fav","name","username","id"],"sources":["/home/dit/Desktop/f3-final/ctd-esp-fe3-final/src/Routes/Favs.jsx"],"sourcesContent":["import React from \"react\";\nimport Card from \"../Components/Card\";\nimport { useDentistStates } from \"../Context\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nconst Favs = () => {\n\n  const {dentistState, dentistDispatch} = useDentistStates()\n\n  const doctorImg= \"../images/doctor.jpg\"\n\n  const [objetos, setObjetos] = useState([]);\n\n  const [favsAdded, setFavsAdded] = useState([]); // Nuevo estado para mantener los IDs de favoritos\n\n  const theme = dentistState.theme === \"dark\" ? \"dark\" : \"light\";\n  \n  useEffect(() => {\n    const misObjetos = localStorage.getItem('favs');\n    if (misObjetos) {\n      const parsedObjetos = JSON.parse(misObjetos);\n      const uniqueObjetos = removeDuplicates(parsedObjetos, 'id');\n      setObjetos(uniqueObjetos);\n    }\n  }, []);\n  \n  // Función para eliminar objetos duplicados basados en una propiedad\n  const removeDuplicates = (arr, prop) => {\n    const uniqueValues = [];\n    const lookup = {};\n  \n    for (let i = 0; i < arr.length; i++) {\n      const obj = arr[i];\n      if (!lookup[obj[prop]]) {\n        lookup[obj[prop]] = true;\n        uniqueValues.push(obj);\n      }\n    }\n  \n    return uniqueValues;\n  };\n\n  return (\n    <main className={theme}> \n    <>\n      <h1>Dentists Favs</h1>\n      <div className=\"card-grid\">\n\n      {objetos && objetos.map(fav => <Card     \n            key={fav.id}         \n            imgSrc= {doctorImg} \n            name={fav.name} \n            username={fav.username}\n            id={fav.id} \n            hideDelete = {false}\n            isDisabled={true} \n            \n          />\n      )}\n        {/* este componente debe consumir los destacados del localStorage */}\n        {/* Deberan renderizar una Card por cada uno de ellos */}\n      </div>\n    </>\n    </main>\n  );\n};\n\nexport default Favs;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EAEjB,MAAM;IAACC,YAAD;IAAeC;EAAf,IAAkCL,gBAAgB,EAAxD;EAEA,MAAMM,SAAS,GAAE,sBAAjB;EAEA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;EAEA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C,CARiB,CAQ+B;;EAEhD,MAAMS,KAAK,GAAGP,YAAY,CAACO,KAAb,KAAuB,MAAvB,GAAgC,MAAhC,GAAyC,OAAvD;EAEAV,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAnB;;IACA,IAAIF,UAAJ,EAAgB;MACd,MAAMG,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWL,UAAX,CAAtB;MACA,MAAMM,aAAa,GAAGC,gBAAgB,CAACJ,aAAD,EAAgB,IAAhB,CAAtC;MACAP,UAAU,CAACU,aAAD,CAAV;IACD;EACF,CAPQ,EAON,EAPM,CAAT,CAZiB,CAqBjB;;EACA,MAAMC,gBAAgB,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;IACtC,MAAMC,YAAY,GAAG,EAArB;IACA,MAAMC,MAAM,GAAG,EAAf;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAAG,CAACK,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;MACnC,MAAME,GAAG,GAAGN,GAAG,CAACI,CAAD,CAAf;;MACA,IAAI,CAACD,MAAM,CAACG,GAAG,CAACL,IAAD,CAAJ,CAAX,EAAwB;QACtBE,MAAM,CAACG,GAAG,CAACL,IAAD,CAAJ,CAAN,GAAoB,IAApB;QACAC,YAAY,CAACK,IAAb,CAAkBD,GAAlB;MACD;IACF;;IAED,OAAOJ,YAAP;EACD,CAbD;;EAeA,oBACE;IAAM,SAAS,EAAEX,KAAjB;IAAA,uBACA;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,WAAf;QAAA,UAECJ,OAAO,IAAIA,OAAO,CAACqB,GAAR,CAAYC,GAAG,iBAAI,QAAC,IAAD;UAEzB,MAAM,EAAGvB,SAFgB;UAGzB,IAAI,EAAEuB,GAAG,CAACC,IAHe;UAIzB,QAAQ,EAAED,GAAG,CAACE,QAJW;UAKzB,EAAE,EAAEF,GAAG,CAACG,EALiB;UAMzB,UAAU,EAAI,KANW;UAOzB,UAAU,EAAE;QAPa,GACpBH,GAAG,CAACG,EADgB;UAAA;UAAA;UAAA;QAAA,QAAnB;MAFZ;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CA5DD;;GAAM7B,I;UAEoCH,gB;;;KAFpCG,I;AA8DN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}